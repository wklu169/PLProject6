
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E2A1C43EB2CB3841B091C9F7F9C8AA29'
    
_lr_action_items = {'QUOTE':([0,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[1,-16,-17,-20,-18,-15,-22,-21,1,-4,1,1,1,-11,-10,-13,-12,-9,1,-5,-14,]),'$end':([0,2,3,5,6,7,8,9,10,11,12,13,15,28,29,],[-19,-16,-17,-20,-2,-18,-15,-3,-22,-21,0,-1,-4,-5,-14,]),'NUM':([0,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[3,-16,-17,-20,-18,-15,-22,-21,3,-4,3,3,3,-11,-10,-13,-12,-9,3,-5,-14,]),'LPAREN':([0,1,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[4,14,-16,-17,-20,-18,-15,-22,-21,18,-4,18,18,18,-11,-10,-13,-12,-9,18,-5,-14,]),'TRUE':([0,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[5,-16,-17,-20,-18,-15,-22,-21,5,-4,5,5,5,-11,-10,-13,-12,-9,5,-5,-14,]),'TEXT':([0,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[7,-16,-17,-20,-18,-15,-22,-21,7,-4,7,7,7,-11,-10,-13,-12,-9,7,-5,-14,]),'RPAREN':([2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[-16,-17,-20,-18,-15,-22,-21,-8,-4,-8,-8,-8,-11,-10,-7,-12,-9,28,29,-6,-8,-5,-14,]),'SIMB':([0,2,3,4,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[8,-16,-17,16,-20,-18,-15,-22,-21,8,-4,8,8,27,-11,-10,-13,-12,-9,8,-5,-14,]),'NIL':([0,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[10,-16,-17,-20,-18,-15,-22,-21,10,-4,10,10,10,-11,-10,-13,-12,-9,10,-5,-14,]),'FALSE':([0,2,3,5,7,8,10,11,14,15,16,17,18,19,20,21,22,23,27,28,29,],[11,-16,-17,-20,-18,-15,-22,-21,11,-4,11,11,11,-11,-10,-13,-12,-9,11,-5,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'item':([14,16,17,18,27,],[17,17,17,17,17,]),'bool':([0,14,16,17,18,27,],[2,2,2,2,2,2,]),'quoted_list':([0,14,16,17,18,27,],[6,19,19,19,19,19,]),'list':([1,14,16,17,18,27,],[15,20,20,20,20,20,]),'empty':([14,16,17,18,27,],[21,21,21,21,21,]),'call':([0,14,16,17,18,27,],[9,22,22,22,22,22,]),'exp':([0,],[12,]),'atom':([0,14,16,17,18,27,],[13,23,23,23,23,23,]),'items':([14,16,17,18,27,],[24,25,26,24,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',145),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',149),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',153),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',157),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',161),
  ('items -> item items','items',2,'p_items','yacc.py',165),
  ('items -> empty','items',1,'p_items_empty','yacc.py',169),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',173),
  ('item -> atom','item',1,'p_item_atom','yacc.py',177),
  ('item -> list','item',1,'p_item_list','yacc.py',181),
  ('item -> quoted_list','item',1,'p_item_qlist','yacc.py',185),
  ('item -> call','item',1,'p_item_call','yacc.py',189),
  ('item -> empty','item',1,'p_item_empty','yacc.py',193),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',197),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',205),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',209),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',213),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',217),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',221),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',225),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',229),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',233),
]
